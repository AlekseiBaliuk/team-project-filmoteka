{"mappings":"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","sources":["src/js/moviesGallery.js","src/js/pagination-options.js","src/js/firebase.js","src/js/trendingMovies.js"],"sourcesContent":["import { fetchMoviesByName, fetchMovieById } from './fetchAPI';\nimport { createMovieCards } from './moviesMarkup';\nimport { paginationOptions } from './pagination-options';\nimport { modalBasicLightbox } from './modalBasicLightbox';\nimport { localStorageAPI } from './localStorageAPI';\nimport Pagination from 'tui-pagination';\nimport 'tui-pagination/dist/tui-pagination.css';\nimport { async } from '@firebase/util';\n\nconst moviesContainer = document.querySelector('.movies');\nconst form = document.querySelector('.hero-home__form');\nconst failSearch = document.querySelector('.fail-search');\n\nconst localStorageApi = new localStorageAPI();\n\nmoviesContainer.addEventListener('click', onMovieCardClick);\n\nexport async function onMovieCardClick(e) {\n  const targetFilm = e.target.closest('li').dataset.id; // id текущего фильма при открытии модалки\n  if (e.target.nodeName === 'UL') {\n    return;\n  }\n\n  // try {\n  // console.log(localStorageApi.getData('current-film'));\n\n  const movies = localStorageApi.getData('movies'); // забираем фильмы из Local Storage по тегу \"movies\"\n\n  const parsedGenres = localStorageApi.getData('genresList'); // забираем жанры из Local Storage\n  const film = movies.filter(({ id }) => id === Number(targetFilm))[0]; // метод filter возвращает массив, поэтому берем элемент этого массива\n  const { genre_ids } = film;\n  let genres;\n  if (genre_ids) {\n    genres = parsedGenres\n      .filter(({ id }) => genre_ids.includes(id)) // перебираем массив всех жанров по id и возвращаем только с текущими\n      .map(({ name }) => name); //перебираем массив текущих id и возвращаем массив с именами\n  }\n  film.genres = genres; // в ключ текущего объекта film сохраняем жанры по именам\n\n  localStorageApi.setData('current-film', film);\n\n  modalBasicLightbox(film, 'movies');\n  localStorageApi.addListenersToBtns();\n  // console.log(localStorageApi.getData('current-film'));\n  // } catch (error) {\n  // console.log(error.message);\n  // }\n}\n\nform.addEventListener('submit', onFormInputHandler);\n\nasync function onFormInputHandler(event) {\n  event.preventDefault();\n  const movieName = form.elements.searchQuery.value.trim();\n  if (movieName === '') {\n    return console.log('Empty search query');\n  }\n\n  galleryFetchAndRender(movieName);\n  form.reset();\n  return;\n}\n\nasync function galleryFetchAndRender(movieName) {\n  const res = await fetchMoviesByName(movieName);\n  galleryRender(res, movieName);\n}\n\nasync function galleryFetchAndRenderByID(movieID) {\n  const res = await fetchMovieById(movieID);\n  // console.log('---galleryFetchAndRenderByID---: ', res);\n  const objResult = {};\n  objResult.results = [{ ...res }];\n  objResult.total_results = 1;\n  localStorage.setItem('movies', JSON.stringify(objResult.results));\n  galleryRender(objResult);\n}\n\nfunction galleryRender(itemRender, movieName) {\n  if (itemRender.results.length === 0) {\n    failSearch.classList.remove('is-hidden');\n    setTimeout(() => failSearch.classList.add('is-hidden'), 5000);\n    form.reset();\n    return;\n  }\n  moviesContainer.innerHTML = createMovieCards(itemRender.results);\n  const pagination = new Pagination('pagination', paginationOptions(itemRender.total_results));\n\n  pagination.on('afterMove', ({ page }) => {\n    fetchMoviesByName(movieName, page)\n      .then(itemRender => {\n        moviesContainer.innerHTML = createMovieCards(itemRender.results);\n        window.scrollTo({ top: 0, behavior: 'smooth' });\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  });\n  // form.reset();\n}\n\nexport { galleryFetchAndRender, galleryFetchAndRenderByID };\n","// let visiblePages = 5;\n// const mediaQueryMobile = window.matchMedia('(max-width: 768px)');\n// const mediaQueryTablet = window.matchMedia('(min-width: 769px) and (max-width: 1279px)');\n// const mediaQueryDesktop = window.matchMedia('(min-width: 1280px)');\n\n// if (mediaQueryMobile.matches) {\n//   visiblePages = 3;\n// }\n\n// if (mediaQueryTablet.matches) {\n//   visiblePages = 5;\n// }\n\n// if (mediaQueryDesktop.matches) {\n//   visiblePages = 6;\n// }\n\n/**\n * Function returns pagination options\n * @param {number} totalResults\n * @returns {options}\n */\nfunction paginationOptions(totalResults, totalPages = 0) {\n  return {\n    totalItems: totalResults,\n    itemsPerPage: 20,\n    visiblePages: 3,\n    centerAlign: true,\n    firstItemClassName: 'pagination-first-child',\n    lastItemClassName: 'pagination-last-child',\n    usageStatistics: true,\n  };\n}\n\nexport { paginationOptions };\n","import { initializeApp } from 'firebase/app';\nimport { getDatabase, set, ref, update, get, onValue, child, remove } from 'firebase/database';\nimport {\n  getAuth,\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n  onAuthStateChanged,\n  signOut,\n  getAdditionalUserInfo,\n} from 'firebase/auth';\nimport {\n  registrationForm,\n  registrationFormName,\n  registrationFormEmail,\n  registrationFormPassword,\n  registrationFormSubmit,\n  loginForm,\n  loginFormName,\n  loginFormEmail,\n  loginFormPassword,\n  onCloseModal,\n  closeOnSubmit,\n} from '/src/js/modals/modal-auth.js';\nconst firebaseConfig = {\n  apiKey: 'AIzaSyCI5JTbKtHIHNuS4WcbgMfz2S8WxJp_ehM',\n  authDomain: 'filmoteka-proj-7.firebaseapp.com',\n  databaseURL: 'https://filmoteka-proj-7-default-rtdb.europe-west1.firebasedatabase.app/',\n  projectId: 'filmoteka-proj-7',\n  storageBucket: 'filmoteka-proj-7.appspot.com',\n  messagingSenderId: '181528100082',\n  appId: '1:181528100082:web:031dd9add36023a4e5e46b',\n  measurementId: 'G-1X27T2N03L',\n};\n\nconst app = initializeApp(firebaseConfig);\nconst database = getDatabase(app);\nconst auth = getAuth();\n\nconst logoutBtnEl = document.querySelector('.logout');\nlet userId;\nlet userEmail;\nlet email;\nlet password;\n\n// обсервер текущего пользователя\nconst welcome = document.querySelector('.welcome');\nconst login = document.querySelector('.login');\n\nonAuthStateChanged(auth, user => {\n  if (user) {\n    userId = user.uid;\n    userEmail = user.email;\n    logoutBtnEl.classList.remove('visually-hidden');\n    login.classList.add('visually-hidden');\n    console.log('current user = ', userEmail);\n    welcome.innerHTML = `Welcome, ${userEmail}!`;\n  }\n});\n\n//регистрация новых пользователей\nregistrationFormSubmit.addEventListener('click', onRegistrationSubmit);\n\nfunction onRegistrationSubmit(event) {\n  event.preventDefault();\n  // const name = registrationFormName.value;\n  const email = registrationFormEmail.value;\n  console.log(email);\n  const password = registrationFormPassword.value;\n  console.log(password);\n  createUserWithEmailAndPassword(auth, email, password)\n    .then(userCredential => {\n      // Signed in\n      const user = userCredential.user;\n      // set(ref(database, 'users/' + user.uid), {\n      //   email: email,\n      //   displayName: email,\n      // });\n      // ...\n    })\n    .catch(error => {\n      const errorCode = error.code;\n      const errorMessage = error.message;\n      console.log(errorCode);\n      console.log(errorMessage);\n      // ..\n    });\n  registrationForm.reset();\n  closeOnSubmit();\n}\n\n//авторизация существующих хользователей\nloginForm.addEventListener('submit', onLoginSubmit);\n\nfunction onLoginSubmit(event) {\n  event.preventDefault();\n  localStorage.removeItem('watched');\n  localStorage.removeItem('queue');\n  const email = loginFormEmail.value;\n  const password = loginFormPassword.value;\n\n  signInWithEmailAndPassword(auth, email, password)\n    .then(userCredential => {\n      // Signed in\n      const user = userCredential.user;\n      window.location.reload();\n      // ...\n    })\n    .catch(error => {\n      const errorCode = error.code;\n      const errorMessage = error.message;\n    });\n\n  loginForm.reset();\n  closeOnSubmit();\n}\n\n//логаут\n\nlogoutBtnEl.addEventListener('click', logOut);\n\nfunction logOut() {\n  signOut(auth)\n    .then(() => {\n      // Sign-out successful.\n      userEmail = null;\n      logoutBtnEl.classList.add('visually-hidden');\n      login.classList.remove('visually-hidden');\n      localStorage.clear();\n    })\n    .catch(error => {\n      // An error happened.\n    });\n  window.location.reload();\n  // window.location.replace('https://nilkad.github.io/js-project-7/index.html');\n}\n","import { fetchTrendingMovies } from './fetchAPI';\nimport { createMovieCards } from './moviesMarkup';\nimport { paginationOptions } from './pagination-options';\n// import './pagination-options';\nimport Pagination from 'tui-pagination';\nimport 'tui-pagination/dist/tui-pagination.css';\n\n// const paginationOptions = {\n//   totalItems: 0,\n//   itemsPerPage: 20,\n//   visiblePages: 3,\n//   centerAlign: true,\n//   firstItemClassName: 'pagination-first-child',\n//   lastItemClassName: 'pagination-last-child',\n//   usageStatistics: false,\n// };\n\nconst moviesContainer = document.querySelector('.movies');\n\n// const getPaginationsOption = totalResults => paginationOptions;\n/**\n * Function fetch trending movies and make markup on page\n */\nasync function trendingMovies() {\n  // try {\n  const res = await fetchTrendingMovies();\n  moviesContainer.innerHTML = createMovieCards(res.results);\n\n  // console.log('res: ', res);\n  // let returnPaginationOption = null;\n  // console.log(typeof paginationOptions(res.total_results)); //.then(e => (returnPaginationOption = e));\n  // paginationOptions.totalItems = res.total_results;\n  // console.log(returnPaginationOption);\n\n  const pagination = new Pagination('pagination', paginationOptions(res.total_results));\n\n  pagination.on('afterMove', ({ page }) => {\n    fetchTrendingMovies(page).then(res => {\n      moviesContainer.innerHTML = createMovieCards(res.results);\n      window.scrollTo({ top: 0, behavior: 'smooth' });\n    });\n  });\n\n  // console.log('!!!!');\n  // document.querySelector('.pagination-first-child').textContent = 1;\n  // document.querySelector('.pagination-last-child').textContent = res.;\n\n  // } catch (error) {\n  //   console.log('error', error.message);\n  // }\n}\ntrendingMovies();\n"],"names":["$cqGDw","parcelRequire","$0a1ba88b43340be7$export$4a570c2dab1e2362","totalResults","totalPages","totalItems","itemsPerPage","visiblePages","centerAlign","firstItemClassName","lastItemClassName","usageStatistics","$1ab5a0a362028ebb$var$moviesContainer","document","querySelector","$1ab5a0a362028ebb$var$form","$1ab5a0a362028ebb$var$failSearch","$1ab5a0a362028ebb$var$localStorageApi","$kLGAr","localStorageAPI","$1ab5a0a362028ebb$var$galleryRender","itemRender1","movieName","results","length","classList","remove","setTimeout","add","reset","innerHTML","$2ySY5","createMovieCards","$parcel$interopDefault","$fb9GJ","total_results","on","page","fetchMoviesByName","then","itemRender","window","scrollTo","top","behavior","catch","error","console","log","addEventListener","async","e","targetFilm","target","closest","dataset","id","nodeName","movies","getData","parsedGenres","film","filter","Number","genre_ids","genres","includes","map","name","setData","$dARph","modalBasicLightbox","addListenersToBtns","event","preventDefault","elements","searchQuery","value","trim","$1ab5a0a362028ebb$export$b9ce81fee29d949f","$25RCP","$1ac6e48565c64d78$var$app","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","$1ac6e48565c64d78$var$auth","$fQ3Fn","getDatabase","$amyG6","getAuth","$1ac6e48565c64d78$var$logoutBtnEl","$1ac6e48565c64d78$var$userId","$1ac6e48565c64d78$var$userEmail","$1ac6e48565c64d78$var$welcome","$1ac6e48565c64d78$var$login","onAuthStateChanged","user","uid","email","$6pjkE","registrationFormSubmit","email1","registrationFormEmail","password1","registrationFormPassword","createUserWithEmailAndPassword","userCredential","errorCode","code","errorMessage","message","registrationForm","closeOnSubmit","loginForm","localStorage","removeItem","email2","loginFormEmail","password2","loginFormPassword","signInWithEmailAndPassword","location","reload","signOut","clear","$913abe10cab369c7$var$moviesContainer","res1","fetchTrendingMovies","res","$913abe10cab369c7$var$trendingMovies"],"version":3,"file":"index.be2c5ef3.js.map"}